{"ast":null,"code":"var _jsxFileName = \"/Users/yohanarejouane/Desktop/WebDev/Yohan Web App - React/Client/yohanapp/src/Components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Col, Row } from 'react-grid-system';\nimport fullstack from '../Images/fullstack.logo.png';\nimport meanstack from '../Images/meanstack.logo.png';\nimport mernstack from '../Images/mernstack.logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioComp() {\n  _s();\n\n  const [page, setPage] = useState(\"Portfolio\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fullstack,\n            alt: \"Full Stack Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          style: {\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is my first Full Stack Project. On this project I need to create 4 main pages which are: \\\"Login\\\", \\\"Departments\\\", \\\"Employees\\\" and \\\"Shifts\\\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          style: {\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is my first Full Stack Project. On this project I need to create 4 main pages which are: \\\"Login\\\", \\\"Departments\\\", \\\"Employees\\\" and \\\"Shifts\\\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meanstack,\n            alt: \"Mean Stack Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mernstack,\n            alt: \"Mern Stack Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          style: {\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is my first Full Stack Project. On this project I need to create 4 main pages which are: \\\"Login\\\", \\\"Departments\\\", \\\"Employees\\\" and \\\"Shifts\\\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PortfolioComp, \"NMTReezDs7Qj+7SOIsuEFiPj5HU=\");\n\n_c = PortfolioComp;\nexport default PortfolioComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioComp\");","map":{"version":3,"sources":["/Users/yohanarejouane/Desktop/WebDev/Yohan Web App - React/Client/yohanapp/src/Components/Portfolio.js"],"names":["useState","Col","Row","fullstack","meanstack","mernstack","PortfolioComp","page","setPage","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,WAAD,CAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEI;AAAI,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAG;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCAAY;AAAK,YAAA,GAAG,EAAEN,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAE;AAACM,YAAAA,KAAK,EAAG;AAAT,WAAnB;AAAA,iCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAA,gCACA,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAE;AAACA,YAAAA,KAAK,EAAG;AAAT,WAAnB;AAAA,iCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCAAY;AAAK,YAAA,GAAG,EAAEL,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCAAY;AAAK,YAAA,GAAG,EAAEC,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,KAAK,EAAE;AAACI,YAAAA,KAAK,EAAG;AAAT,WAAnB;AAAA,iCAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA7BMH,a;;KAAAA,a;AA+BP,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { Col, Row } from 'react-grid-system';\nimport fullstack from '../Images/fullstack.logo.png'\nimport meanstack from '../Images/meanstack.logo.png'\nimport mernstack from '../Images/mernstack.logo.png'\n\nfunction PortfolioComp() {\n\n    const [page, setPage] = useState(\"Portfolio\");\n    return (\n      <div className=\"App\">\n\n          <h1 style={{color : 'white'}}>Portfolio</h1>\n\n          <div class=\"container\">\n              <Row>\n                  <Col lg={6}><img src={fullstack} alt=\"Full Stack Logo\" /></Col>\n                  <Col lg={6} style={{color : 'white'}}><p>This is my first Full Stack Project. On this project I need to create 4 main pages which are: \"Login\", \"Departments\", \"Employees\" and \"Shifts\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.</p></Col>  \n              </Row>\n              <Row>\n              <Col lg={6} style={{color : 'white'}}><p>This is my first Full Stack Project. On this project I need to create 4 main pages which are: \"Login\", \"Departments\", \"Employees\" and \"Shifts\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.</p></Col>\n                  <Col lg={6}><img src={meanstack} alt=\"Mean Stack Logo\" /></Col>\n              </Row>\n              <Row>\n                  <Col lg={6}><img src={mernstack} alt=\"Mern Stack Logo\" /></Col>\n                  <Col lg={6} style={{color : 'white'}}><p>This is my first Full Stack Project. On this project I need to create 4 main pages which are: \"Login\", \"Departments\", \"Employees\" and \"Shifts\". We can manage data from the data base directly trough these pages using CRUD operations. This website is managed by users so we need to create a Login page in order for them to connect with a password. Each user has a limited number of actions per day and afterwards they are not allowed to connect for the next 24 hours. Once a user is logged-in, His name and number of actions available are shown on every page of the website. In addition to the CRUD operations on the employee page, we need to create a Search Box. This Search Box should be able to find an employee according his first name, last name or department.</p></Col>\n              </Row>\n          </div>\n\n\n          \n            \n            \n      </div>\n    );\n  }\n  \n  export default PortfolioComp;"]},"metadata":{},"sourceType":"module"}